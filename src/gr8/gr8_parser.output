   0  $accept : file $end

   1  file :
   2       | decls

   3  decls : decl
   4        | decls decl

   5  decl : func
   6       | var ';'

   7  func : funcDecl ';'
   8       | funcDef

   9  funcCall : tUSE exprs tFOR tIDENTIFIER
  10           | tDO tIDENTIFIER

  11  funcDef : tDEFINE type tFUNCTION tIDENTIFIER tAS block
  12          | tDEFINE tPROCEDURE tIDENTIFIER tAS block
  13          | tDEFINE type tFUNCTION tIDENTIFIER tON params tAS block
  14          | tDEFINE tPROCEDURE tIDENTIFIER tON params tAS block
  15          | tDEFINE tPUBLIC type tFUNCTION tIDENTIFIER tAS block
  16          | tDEFINE tPUBLIC tPROCEDURE tIDENTIFIER tAS block
  17          | tDEFINE tPUBLIC type tFUNCTION tIDENTIFIER tON params tAS block
  18          | tDEFINE tPUBLIC tPROCEDURE tIDENTIFIER tON params tAS block

  19  funcDecl : type tFUNCTION tIDENTIFIER
  20           | tPROCEDURE tIDENTIFIER
  21           | type tFUNCTION tIDENTIFIER tUSES params
  22           | tPROCEDURE tIDENTIFIER tUSES params
  23           | tPUBLIC type tFUNCTION tIDENTIFIER
  24           | tPUBLIC tPROCEDURE tIDENTIFIER
  25           | tPUBLIC type tFUNCTION tIDENTIFIER tUSES params
  26           | tPUBLIC tPROCEDURE tIDENTIFIER tUSES params
  27           | tUSE type tFUNCTION tIDENTIFIER
  28           | tUSE tPROCEDURE tIDENTIFIER
  29           | tUSE type tFUNCTION tIDENTIFIER tUSES params
  30           | tUSE tPROCEDURE tIDENTIFIER tUSES params

  31  params : param
  32         | params ',' param

  33  param : type tIDENTIFIER

  34  blockVars : blockVar ';'
  35            | blockVars blockVar ';'

  36  blockVar : type tIDENTIFIER
  37           | type tIDENTIFIER '(' tINITIALLY expr ')'

  38  var : type tIDENTIFIER
  39      | type tIDENTIFIER '(' tINITIALLY literal ')'
  40      | tPUBLIC type tIDENTIFIER
  41      | tPUBLIC type tIDENTIFIER '(' tINITIALLY literal ')'
  42      | tUSE type tIDENTIFIER

  43  type : tTYPEINT
  44       | intPtr tFAKE
  45       | tTYPEDOUBLE
  46       | doublePtr tFAKE
  47       | tTYPESTRING
  48       | stringPtr tTYPESTRING

  49  stringPtr : tFAKE
  50            | tFAKE stringPtr

  51  doublePtr : tTYPEDOUBLE
  52            | tTYPEDOUBLE doublePtr

  53  intPtr : tTYPEINT
  54         | tTYPEINT intPtr

  55  block : '{' '}'
  56        | '{' blockVars '}'
  57        | '{' blockInstrs '}'
  58        | '{' blockVars blockInstrs '}'

  59  blockInstrs : instrs
  60              | finalInstr
  61              | instrs finalInstr

  62  instrs : instr
  63         | instrs instr

  64  finalInstr : tAGAIN ';'
  65             | tAGAIN integer ';'
  66             | tSTOP ';'
  67             | tSTOP integer ';'
  68             | tRETURN ';'
  69             | tRETURN expr ';'

  70  instr : expr ';'
  71        | tPRINT expr ';'
  72        | tPRINTLN expr ';'
  73        | tASSIGN expr tTO lval ';'
  74        | instrCond
  75        | sweeping
  76        | block

  77  sweeping : tSWEEPING lval tFROM expr tTO expr tDO block
  78           | tSWEEPING lval tFROM expr tTO expr tBY expr tDO block

  79  instrCond : tIF ifs

  80  ifs : expr tTHEN block
  81      | expr tTHEN block tELSE block
  82      | expr tTHEN block tELSIF ifs

  83  exprs : expr
  84        | exprs ',' expr

  85  expr : literal
  86       | funcCall
  87       | '(' expr ')'
  88       | '+' expr
  89       | '-' expr
  90       | expr tOBJECTS
  91       | expr '+' expr
  92       | expr '-' expr
  93       | expr '*' expr
  94       | expr '/' expr
  95       | expr '%' expr
  96       | expr '<' expr
  97       | expr '>' expr
  98       | expr tEQUALS expr
  99       | '!' expr
 100       | expr tAND expr
 101       | expr tOR expr
 102       | lval
 103       | lval '?'
 104       | tINPUT

 105  lval : tCELL expr tAT lval
 106       | tCELL expr tAT '(' expr ')'
 107       | tIDENTIFIER

 108  literal : integer
 109          | double
 110          | string
 111          | tNULL

 112  integer : tINT

 113  double : tDOUBLE

 114  string : tSTRING
 115         | string tSTRING

state 0
	$accept : . file $end  (0)
	file : .  (1)

	tFAKE  shift 1
	tUSE  shift 2
	tPUBLIC  shift 3
	tPROCEDURE  shift 4
	tDEFINE  shift 5
	tTYPEINT  shift 6
	tTYPEDOUBLE  shift 7
	tTYPESTRING  shift 8
	$end  reduce 1

	file  goto 9
	decls  goto 10
	intPtr  goto 11
	doublePtr  goto 12
	stringPtr  goto 13
	type  goto 14
	var  goto 15
	funcDecl  goto 16
	funcDef  goto 17
	func  goto 18
	decl  goto 19


state 1
	stringPtr : tFAKE .  (49)
	stringPtr : tFAKE . stringPtr  (50)

	tFAKE  shift 1
	tTYPESTRING  reduce 49

	stringPtr  goto 20


state 2
	funcDecl : tUSE . type tFUNCTION tIDENTIFIER  (27)
	funcDecl : tUSE . tPROCEDURE tIDENTIFIER  (28)
	funcDecl : tUSE . type tFUNCTION tIDENTIFIER tUSES params  (29)
	funcDecl : tUSE . tPROCEDURE tIDENTIFIER tUSES params  (30)
	var : tUSE . type tIDENTIFIER  (42)

	tFAKE  shift 1
	tPROCEDURE  shift 21
	tTYPEINT  shift 6
	tTYPEDOUBLE  shift 7
	tTYPESTRING  shift 8
	.  error

	intPtr  goto 11
	doublePtr  goto 12
	stringPtr  goto 13
	type  goto 22


state 3
	funcDecl : tPUBLIC . type tFUNCTION tIDENTIFIER  (23)
	funcDecl : tPUBLIC . tPROCEDURE tIDENTIFIER  (24)
	funcDecl : tPUBLIC . type tFUNCTION tIDENTIFIER tUSES params  (25)
	funcDecl : tPUBLIC . tPROCEDURE tIDENTIFIER tUSES params  (26)
	var : tPUBLIC . type tIDENTIFIER  (40)
	var : tPUBLIC . type tIDENTIFIER '(' tINITIALLY literal ')'  (41)

	tFAKE  shift 1
	tPROCEDURE  shift 23
	tTYPEINT  shift 6
	tTYPEDOUBLE  shift 7
	tTYPESTRING  shift 8
	.  error

	intPtr  goto 11
	doublePtr  goto 12
	stringPtr  goto 13
	type  goto 24


state 4
	funcDecl : tPROCEDURE . tIDENTIFIER  (20)
	funcDecl : tPROCEDURE . tIDENTIFIER tUSES params  (22)

	tIDENTIFIER  shift 25
	.  error


state 5
	funcDef : tDEFINE . type tFUNCTION tIDENTIFIER tAS block  (11)
	funcDef : tDEFINE . tPROCEDURE tIDENTIFIER tAS block  (12)
	funcDef : tDEFINE . type tFUNCTION tIDENTIFIER tON params tAS block  (13)
	funcDef : tDEFINE . tPROCEDURE tIDENTIFIER tON params tAS block  (14)
	funcDef : tDEFINE . tPUBLIC type tFUNCTION tIDENTIFIER tAS block  (15)
	funcDef : tDEFINE . tPUBLIC tPROCEDURE tIDENTIFIER tAS block  (16)
	funcDef : tDEFINE . tPUBLIC type tFUNCTION tIDENTIFIER tON params tAS block  (17)
	funcDef : tDEFINE . tPUBLIC tPROCEDURE tIDENTIFIER tON params tAS block  (18)

	tFAKE  shift 1
	tPUBLIC  shift 26
	tPROCEDURE  shift 27
	tTYPEINT  shift 6
	tTYPEDOUBLE  shift 7
	tTYPESTRING  shift 8
	.  error

	intPtr  goto 11
	doublePtr  goto 12
	stringPtr  goto 13
	type  goto 28


state 6
	type : tTYPEINT .  (43)
	intPtr : tTYPEINT .  (53)
	intPtr : tTYPEINT . intPtr  (54)

	tTYPEINT  shift 29
	tIDENTIFIER  reduce 43
	tFAKE  reduce 53
	tFUNCTION  reduce 43

	intPtr  goto 30


state 7
	type : tTYPEDOUBLE .  (45)
	doublePtr : tTYPEDOUBLE .  (51)
	doublePtr : tTYPEDOUBLE . doublePtr  (52)

	tTYPEDOUBLE  shift 31
	tIDENTIFIER  reduce 45
	tFAKE  reduce 51
	tFUNCTION  reduce 45

	doublePtr  goto 32


state 8
	type : tTYPESTRING .  (47)

	.  reduce 47


state 9
	$accept : file . $end  (0)

	$end  accept


state 10
	file : decls .  (2)
	decls : decls . decl  (4)

	tFAKE  shift 1
	tUSE  shift 2
	tPUBLIC  shift 3
	tPROCEDURE  shift 4
	tDEFINE  shift 5
	tTYPEINT  shift 6
	tTYPEDOUBLE  shift 7
	tTYPESTRING  shift 8
	$end  reduce 2

	intPtr  goto 11
	doublePtr  goto 12
	stringPtr  goto 13
	type  goto 14
	var  goto 15
	funcDecl  goto 16
	funcDef  goto 17
	func  goto 18
	decl  goto 33


state 11
	type : intPtr . tFAKE  (44)

	tFAKE  shift 34
	.  error


state 12
	type : doublePtr . tFAKE  (46)

	tFAKE  shift 35
	.  error


state 13
	type : stringPtr . tTYPESTRING  (48)

	tTYPESTRING  shift 36
	.  error


state 14
	funcDecl : type . tFUNCTION tIDENTIFIER  (19)
	funcDecl : type . tFUNCTION tIDENTIFIER tUSES params  (21)
	var : type . tIDENTIFIER  (38)
	var : type . tIDENTIFIER '(' tINITIALLY literal ')'  (39)

	tIDENTIFIER  shift 37
	tFUNCTION  shift 38
	.  error


state 15
	decl : var . ';'  (6)

	';'  shift 39
	.  error


state 16
	func : funcDecl . ';'  (7)

	';'  shift 40
	.  error


state 17
	func : funcDef .  (8)

	.  reduce 8


state 18
	decl : func .  (5)

	.  reduce 5


state 19
	decls : decl .  (3)

	.  reduce 3


state 20
	stringPtr : tFAKE stringPtr .  (50)

	.  reduce 50


state 21
	funcDecl : tUSE tPROCEDURE . tIDENTIFIER  (28)
	funcDecl : tUSE tPROCEDURE . tIDENTIFIER tUSES params  (30)

	tIDENTIFIER  shift 41
	.  error


state 22
	funcDecl : tUSE type . tFUNCTION tIDENTIFIER  (27)
	funcDecl : tUSE type . tFUNCTION tIDENTIFIER tUSES params  (29)
	var : tUSE type . tIDENTIFIER  (42)

	tIDENTIFIER  shift 42
	tFUNCTION  shift 43
	.  error


state 23
	funcDecl : tPUBLIC tPROCEDURE . tIDENTIFIER  (24)
	funcDecl : tPUBLIC tPROCEDURE . tIDENTIFIER tUSES params  (26)

	tIDENTIFIER  shift 44
	.  error


state 24
	funcDecl : tPUBLIC type . tFUNCTION tIDENTIFIER  (23)
	funcDecl : tPUBLIC type . tFUNCTION tIDENTIFIER tUSES params  (25)
	var : tPUBLIC type . tIDENTIFIER  (40)
	var : tPUBLIC type . tIDENTIFIER '(' tINITIALLY literal ')'  (41)

	tIDENTIFIER  shift 45
	tFUNCTION  shift 46
	.  error


state 25
	funcDecl : tPROCEDURE tIDENTIFIER .  (20)
	funcDecl : tPROCEDURE tIDENTIFIER . tUSES params  (22)

	tUSES  shift 47
	';'  reduce 20


state 26
	funcDef : tDEFINE tPUBLIC . type tFUNCTION tIDENTIFIER tAS block  (15)
	funcDef : tDEFINE tPUBLIC . tPROCEDURE tIDENTIFIER tAS block  (16)
	funcDef : tDEFINE tPUBLIC . type tFUNCTION tIDENTIFIER tON params tAS block  (17)
	funcDef : tDEFINE tPUBLIC . tPROCEDURE tIDENTIFIER tON params tAS block  (18)

	tFAKE  shift 1
	tPROCEDURE  shift 48
	tTYPEINT  shift 6
	tTYPEDOUBLE  shift 7
	tTYPESTRING  shift 8
	.  error

	intPtr  goto 11
	doublePtr  goto 12
	stringPtr  goto 13
	type  goto 49


state 27
	funcDef : tDEFINE tPROCEDURE . tIDENTIFIER tAS block  (12)
	funcDef : tDEFINE tPROCEDURE . tIDENTIFIER tON params tAS block  (14)

	tIDENTIFIER  shift 50
	.  error


state 28
	funcDef : tDEFINE type . tFUNCTION tIDENTIFIER tAS block  (11)
	funcDef : tDEFINE type . tFUNCTION tIDENTIFIER tON params tAS block  (13)

	tFUNCTION  shift 51
	.  error


state 29
	intPtr : tTYPEINT .  (53)
	intPtr : tTYPEINT . intPtr  (54)

	tTYPEINT  shift 29
	tFAKE  reduce 53

	intPtr  goto 30


state 30
	intPtr : tTYPEINT intPtr .  (54)

	.  reduce 54


state 31
	doublePtr : tTYPEDOUBLE .  (51)
	doublePtr : tTYPEDOUBLE . doublePtr  (52)

	tTYPEDOUBLE  shift 31
	tFAKE  reduce 51

	doublePtr  goto 32


state 32
	doublePtr : tTYPEDOUBLE doublePtr .  (52)

	.  reduce 52


state 33
	decls : decls decl .  (4)

	.  reduce 4


state 34
	type : intPtr tFAKE .  (44)

	.  reduce 44


state 35
	type : doublePtr tFAKE .  (46)

	.  reduce 46


state 36
	type : stringPtr tTYPESTRING .  (48)

	.  reduce 48


state 37
	var : type tIDENTIFIER .  (38)
	var : type tIDENTIFIER . '(' tINITIALLY literal ')'  (39)

	'('  shift 52
	';'  reduce 38


state 38
	funcDecl : type tFUNCTION . tIDENTIFIER  (19)
	funcDecl : type tFUNCTION . tIDENTIFIER tUSES params  (21)

	tIDENTIFIER  shift 53
	.  error


state 39
	decl : var ';' .  (6)

	.  reduce 6


state 40
	func : funcDecl ';' .  (7)

	.  reduce 7


state 41
	funcDecl : tUSE tPROCEDURE tIDENTIFIER .  (28)
	funcDecl : tUSE tPROCEDURE tIDENTIFIER . tUSES params  (30)

	tUSES  shift 54
	';'  reduce 28


state 42
	var : tUSE type tIDENTIFIER .  (42)

	.  reduce 42


state 43
	funcDecl : tUSE type tFUNCTION . tIDENTIFIER  (27)
	funcDecl : tUSE type tFUNCTION . tIDENTIFIER tUSES params  (29)

	tIDENTIFIER  shift 55
	.  error


state 44
	funcDecl : tPUBLIC tPROCEDURE tIDENTIFIER .  (24)
	funcDecl : tPUBLIC tPROCEDURE tIDENTIFIER . tUSES params  (26)

	tUSES  shift 56
	';'  reduce 24


state 45
	var : tPUBLIC type tIDENTIFIER .  (40)
	var : tPUBLIC type tIDENTIFIER . '(' tINITIALLY literal ')'  (41)

	'('  shift 57
	';'  reduce 40


state 46
	funcDecl : tPUBLIC type tFUNCTION . tIDENTIFIER  (23)
	funcDecl : tPUBLIC type tFUNCTION . tIDENTIFIER tUSES params  (25)

	tIDENTIFIER  shift 58
	.  error


state 47
	funcDecl : tPROCEDURE tIDENTIFIER tUSES . params  (22)

	tFAKE  shift 1
	tTYPEINT  shift 6
	tTYPEDOUBLE  shift 7
	tTYPESTRING  shift 8
	.  error

	params  goto 59
	intPtr  goto 11
	doublePtr  goto 12
	stringPtr  goto 13
	type  goto 60
	param  goto 61


state 48
	funcDef : tDEFINE tPUBLIC tPROCEDURE . tIDENTIFIER tAS block  (16)
	funcDef : tDEFINE tPUBLIC tPROCEDURE . tIDENTIFIER tON params tAS block  (18)

	tIDENTIFIER  shift 62
	.  error


state 49
	funcDef : tDEFINE tPUBLIC type . tFUNCTION tIDENTIFIER tAS block  (15)
	funcDef : tDEFINE tPUBLIC type . tFUNCTION tIDENTIFIER tON params tAS block  (17)

	tFUNCTION  shift 63
	.  error


state 50
	funcDef : tDEFINE tPROCEDURE tIDENTIFIER . tAS block  (12)
	funcDef : tDEFINE tPROCEDURE tIDENTIFIER . tON params tAS block  (14)

	tON  shift 64
	tAS  shift 65
	.  error


state 51
	funcDef : tDEFINE type tFUNCTION . tIDENTIFIER tAS block  (11)
	funcDef : tDEFINE type tFUNCTION . tIDENTIFIER tON params tAS block  (13)

	tIDENTIFIER  shift 66
	.  error


state 52
	var : type tIDENTIFIER '(' . tINITIALLY literal ')'  (39)

	tINITIALLY  shift 67
	.  error


state 53
	funcDecl : type tFUNCTION tIDENTIFIER .  (19)
	funcDecl : type tFUNCTION tIDENTIFIER . tUSES params  (21)

	tUSES  shift 68
	';'  reduce 19


state 54
	funcDecl : tUSE tPROCEDURE tIDENTIFIER tUSES . params  (30)

	tFAKE  shift 1
	tTYPEINT  shift 6
	tTYPEDOUBLE  shift 7
	tTYPESTRING  shift 8
	.  error

	params  goto 69
	intPtr  goto 11
	doublePtr  goto 12
	stringPtr  goto 13
	type  goto 60
	param  goto 61


state 55
	funcDecl : tUSE type tFUNCTION tIDENTIFIER .  (27)
	funcDecl : tUSE type tFUNCTION tIDENTIFIER . tUSES params  (29)

	tUSES  shift 70
	';'  reduce 27


state 56
	funcDecl : tPUBLIC tPROCEDURE tIDENTIFIER tUSES . params  (26)

	tFAKE  shift 1
	tTYPEINT  shift 6
	tTYPEDOUBLE  shift 7
	tTYPESTRING  shift 8
	.  error

	params  goto 71
	intPtr  goto 11
	doublePtr  goto 12
	stringPtr  goto 13
	type  goto 60
	param  goto 61


state 57
	var : tPUBLIC type tIDENTIFIER '(' . tINITIALLY literal ')'  (41)

	tINITIALLY  shift 72
	.  error


state 58
	funcDecl : tPUBLIC type tFUNCTION tIDENTIFIER .  (23)
	funcDecl : tPUBLIC type tFUNCTION tIDENTIFIER . tUSES params  (25)

	tUSES  shift 73
	';'  reduce 23


state 59
	funcDecl : tPROCEDURE tIDENTIFIER tUSES params .  (22)
	params : params . ',' param  (32)

	','  shift 74
	';'  reduce 22


state 60
	param : type . tIDENTIFIER  (33)

	tIDENTIFIER  shift 75
	.  error


state 61
	params : param .  (31)

	.  reduce 31


state 62
	funcDef : tDEFINE tPUBLIC tPROCEDURE tIDENTIFIER . tAS block  (16)
	funcDef : tDEFINE tPUBLIC tPROCEDURE tIDENTIFIER . tON params tAS block  (18)

	tON  shift 76
	tAS  shift 77
	.  error


state 63
	funcDef : tDEFINE tPUBLIC type tFUNCTION . tIDENTIFIER tAS block  (15)
	funcDef : tDEFINE tPUBLIC type tFUNCTION . tIDENTIFIER tON params tAS block  (17)

	tIDENTIFIER  shift 78
	.  error


state 64
	funcDef : tDEFINE tPROCEDURE tIDENTIFIER tON . params tAS block  (14)

	tFAKE  shift 1
	tTYPEINT  shift 6
	tTYPEDOUBLE  shift 7
	tTYPESTRING  shift 8
	.  error

	params  goto 79
	intPtr  goto 11
	doublePtr  goto 12
	stringPtr  goto 13
	type  goto 60
	param  goto 61


state 65
	funcDef : tDEFINE tPROCEDURE tIDENTIFIER tAS . block  (12)

	'{'  shift 80
	.  error

	block  goto 81


state 66
	funcDef : tDEFINE type tFUNCTION tIDENTIFIER . tAS block  (11)
	funcDef : tDEFINE type tFUNCTION tIDENTIFIER . tON params tAS block  (13)

	tON  shift 82
	tAS  shift 83
	.  error


state 67
	var : type tIDENTIFIER '(' tINITIALLY . literal ')'  (39)

	tINT  shift 84
	tDOUBLE  shift 85
	tSTRING  shift 86
	tNULL  shift 87
	.  error

	literal  goto 88
	string  goto 89
	integer  goto 90
	double  goto 91


state 68
	funcDecl : type tFUNCTION tIDENTIFIER tUSES . params  (21)

	tFAKE  shift 1
	tTYPEINT  shift 6
	tTYPEDOUBLE  shift 7
	tTYPESTRING  shift 8
	.  error

	params  goto 92
	intPtr  goto 11
	doublePtr  goto 12
	stringPtr  goto 13
	type  goto 60
	param  goto 61


state 69
	funcDecl : tUSE tPROCEDURE tIDENTIFIER tUSES params .  (30)
	params : params . ',' param  (32)

	','  shift 74
	';'  reduce 30


state 70
	funcDecl : tUSE type tFUNCTION tIDENTIFIER tUSES . params  (29)

	tFAKE  shift 1
	tTYPEINT  shift 6
	tTYPEDOUBLE  shift 7
	tTYPESTRING  shift 8
	.  error

	params  goto 93
	intPtr  goto 11
	doublePtr  goto 12
	stringPtr  goto 13
	type  goto 60
	param  goto 61


state 71
	funcDecl : tPUBLIC tPROCEDURE tIDENTIFIER tUSES params .  (26)
	params : params . ',' param  (32)

	','  shift 74
	';'  reduce 26


state 72
	var : tPUBLIC type tIDENTIFIER '(' tINITIALLY . literal ')'  (41)

	tINT  shift 84
	tDOUBLE  shift 85
	tSTRING  shift 86
	tNULL  shift 87
	.  error

	literal  goto 94
	string  goto 89
	integer  goto 90
	double  goto 91


state 73
	funcDecl : tPUBLIC type tFUNCTION tIDENTIFIER tUSES . params  (25)

	tFAKE  shift 1
	tTYPEINT  shift 6
	tTYPEDOUBLE  shift 7
	tTYPESTRING  shift 8
	.  error

	params  goto 95
	intPtr  goto 11
	doublePtr  goto 12
	stringPtr  goto 13
	type  goto 60
	param  goto 61


state 74
	params : params ',' . param  (32)

	tFAKE  shift 1
	tTYPEINT  shift 6
	tTYPEDOUBLE  shift 7
	tTYPESTRING  shift 8
	.  error

	intPtr  goto 11
	doublePtr  goto 12
	stringPtr  goto 13
	type  goto 60
	param  goto 96


state 75
	param : type tIDENTIFIER .  (33)

	.  reduce 33


state 76
	funcDef : tDEFINE tPUBLIC tPROCEDURE tIDENTIFIER tON . params tAS block  (18)

	tFAKE  shift 1
	tTYPEINT  shift 6
	tTYPEDOUBLE  shift 7
	tTYPESTRING  shift 8
	.  error

	params  goto 97
	intPtr  goto 11
	doublePtr  goto 12
	stringPtr  goto 13
	type  goto 60
	param  goto 61


state 77
	funcDef : tDEFINE tPUBLIC tPROCEDURE tIDENTIFIER tAS . block  (16)

	'{'  shift 80
	.  error

	block  goto 98


state 78
	funcDef : tDEFINE tPUBLIC type tFUNCTION tIDENTIFIER . tAS block  (15)
	funcDef : tDEFINE tPUBLIC type tFUNCTION tIDENTIFIER . tON params tAS block  (17)

	tON  shift 99
	tAS  shift 100
	.  error


state 79
	funcDef : tDEFINE tPROCEDURE tIDENTIFIER tON params . tAS block  (14)
	params : params . ',' param  (32)

	tAS  shift 101
	','  shift 74
	.  error


state 80
	block : '{' . '}'  (55)
	block : '{' . blockVars '}'  (56)
	block : '{' . blockInstrs '}'  (57)
	block : '{' . blockVars blockInstrs '}'  (58)

	tINT  shift 84
	tDOUBLE  shift 85
	tIDENTIFIER  shift 102
	tSTRING  shift 86
	tFAKE  shift 1
	tUSE  shift 103
	tDO  shift 104
	tRETURN  shift 105
	tASSIGN  shift 106
	tCELL  shift 107
	tINPUT  shift 108
	tPRINT  shift 109
	tPRINTLN  shift 110
	tSTOP  shift 111
	tAGAIN  shift 112
	tSWEEPING  shift 113
	tNULL  shift 87
	tIF  shift 114
	tTYPEINT  shift 6
	tTYPEDOUBLE  shift 7
	tTYPESTRING  shift 8
	'!'  shift 115
	'+'  shift 116
	'-'  shift 117
	'('  shift 118
	'{'  shift 80
	'}'  shift 119
	.  error

	expr  goto 120
	sweeping  goto 121
	instrCond  goto 122
	instr  goto 123
	finalInstr  goto 124
	instrs  goto 125
	blockVars  goto 126
	blockInstrs  goto 127
	literal  goto 128
	funcCall  goto 129
	lval  goto 130
	string  goto 89
	integer  goto 90
	double  goto 91
	block  goto 131
	intPtr  goto 11
	doublePtr  goto 12
	stringPtr  goto 13
	type  goto 132
	blockVar  goto 133


state 81
	funcDef : tDEFINE tPROCEDURE tIDENTIFIER tAS block .  (12)

	.  reduce 12


state 82
	funcDef : tDEFINE type tFUNCTION tIDENTIFIER tON . params tAS block  (13)

	tFAKE  shift 1
	tTYPEINT  shift 6
	tTYPEDOUBLE  shift 7
	tTYPESTRING  shift 8
	.  error

	params  goto 134
	intPtr  goto 11
	doublePtr  goto 12
	stringPtr  goto 13
	type  goto 60
	param  goto 61


state 83
	funcDef : tDEFINE type tFUNCTION tIDENTIFIER tAS . block  (11)

	'{'  shift 80
	.  error

	block  goto 135


state 84
	integer : tINT .  (112)

	.  reduce 112


state 85
	double : tDOUBLE .  (113)

	.  reduce 113


state 86
	string : tSTRING .  (114)

	.  reduce 114


state 87
	literal : tNULL .  (111)

	.  reduce 111


state 88
	var : type tIDENTIFIER '(' tINITIALLY literal . ')'  (39)

	')'  shift 136
	.  error


state 89
	literal : string .  (110)
	string : string . tSTRING  (115)

	tSTRING  shift 137
	tDO  reduce 110
	tFOR  reduce 110
	tAND  reduce 110
	tOR  reduce 110
	tEQUALS  reduce 110
	tTO  reduce 110
	tAT  reduce 110
	tOBJECTS  reduce 110
	tTHEN  reduce 110
	tBY  reduce 110
	'<'  reduce 110
	'>'  reduce 110
	'+'  reduce 110
	'-'  reduce 110
	'*'  reduce 110
	'/'  reduce 110
	'%'  reduce 110
	';'  reduce 110
	','  reduce 110
	')'  reduce 110


state 90
	literal : integer .  (108)

	.  reduce 108


state 91
	literal : double .  (109)

	.  reduce 109


state 92
	funcDecl : type tFUNCTION tIDENTIFIER tUSES params .  (21)
	params : params . ',' param  (32)

	','  shift 74
	';'  reduce 21


state 93
	funcDecl : tUSE type tFUNCTION tIDENTIFIER tUSES params .  (29)
	params : params . ',' param  (32)

	','  shift 74
	';'  reduce 29


state 94
	var : tPUBLIC type tIDENTIFIER '(' tINITIALLY literal . ')'  (41)

	')'  shift 138
	.  error


state 95
	funcDecl : tPUBLIC type tFUNCTION tIDENTIFIER tUSES params .  (25)
	params : params . ',' param  (32)

	','  shift 74
	';'  reduce 25


state 96
	params : params ',' param .  (32)

	.  reduce 32


state 97
	funcDef : tDEFINE tPUBLIC tPROCEDURE tIDENTIFIER tON params . tAS block  (18)
	params : params . ',' param  (32)

	tAS  shift 139
	','  shift 74
	.  error


state 98
	funcDef : tDEFINE tPUBLIC tPROCEDURE tIDENTIFIER tAS block .  (16)

	.  reduce 16


state 99
	funcDef : tDEFINE tPUBLIC type tFUNCTION tIDENTIFIER tON . params tAS block  (17)

	tFAKE  shift 1
	tTYPEINT  shift 6
	tTYPEDOUBLE  shift 7
	tTYPESTRING  shift 8
	.  error

	params  goto 140
	intPtr  goto 11
	doublePtr  goto 12
	stringPtr  goto 13
	type  goto 60
	param  goto 61


state 100
	funcDef : tDEFINE tPUBLIC type tFUNCTION tIDENTIFIER tAS . block  (15)

	'{'  shift 80
	.  error

	block  goto 141


state 101
	funcDef : tDEFINE tPROCEDURE tIDENTIFIER tON params tAS . block  (14)

	'{'  shift 80
	.  error

	block  goto 142


state 102
	lval : tIDENTIFIER .  (107)

	.  reduce 107


state 103
	funcCall : tUSE . exprs tFOR tIDENTIFIER  (9)

	tINT  shift 84
	tDOUBLE  shift 85
	tIDENTIFIER  shift 102
	tSTRING  shift 86
	tUSE  shift 103
	tDO  shift 104
	tCELL  shift 107
	tINPUT  shift 108
	tNULL  shift 87
	'!'  shift 115
	'+'  shift 116
	'-'  shift 117
	'('  shift 118
	.  error

	expr  goto 143
	exprs  goto 144
	literal  goto 128
	funcCall  goto 129
	lval  goto 130
	string  goto 89
	integer  goto 90
	double  goto 91


state 104
	funcCall : tDO . tIDENTIFIER  (10)

	tIDENTIFIER  shift 145
	.  error


state 105
	finalInstr : tRETURN . ';'  (68)
	finalInstr : tRETURN . expr ';'  (69)

	tINT  shift 84
	tDOUBLE  shift 85
	tIDENTIFIER  shift 102
	tSTRING  shift 86
	tUSE  shift 103
	tDO  shift 104
	tCELL  shift 107
	tINPUT  shift 108
	tNULL  shift 87
	'!'  shift 115
	'+'  shift 116
	'-'  shift 117
	';'  shift 146
	'('  shift 118
	.  error

	expr  goto 147
	literal  goto 128
	funcCall  goto 129
	lval  goto 130
	string  goto 89
	integer  goto 90
	double  goto 91


state 106
	instr : tASSIGN . expr tTO lval ';'  (73)

	tINT  shift 84
	tDOUBLE  shift 85
	tIDENTIFIER  shift 102
	tSTRING  shift 86
	tUSE  shift 103
	tDO  shift 104
	tCELL  shift 107
	tINPUT  shift 108
	tNULL  shift 87
	'!'  shift 115
	'+'  shift 116
	'-'  shift 117
	'('  shift 118
	.  error

	expr  goto 148
	literal  goto 128
	funcCall  goto 129
	lval  goto 130
	string  goto 89
	integer  goto 90
	double  goto 91


state 107
	lval : tCELL . expr tAT lval  (105)
	lval : tCELL . expr tAT '(' expr ')'  (106)

	tINT  shift 84
	tDOUBLE  shift 85
	tIDENTIFIER  shift 102
	tSTRING  shift 86
	tUSE  shift 103
	tDO  shift 104
	tCELL  shift 107
	tINPUT  shift 108
	tNULL  shift 87
	'!'  shift 115
	'+'  shift 116
	'-'  shift 117
	'('  shift 118
	.  error

	expr  goto 149
	literal  goto 128
	funcCall  goto 129
	lval  goto 130
	string  goto 89
	integer  goto 90
	double  goto 91


state 108
	expr : tINPUT .  (104)

	.  reduce 104


state 109
	instr : tPRINT . expr ';'  (71)

	tINT  shift 84
	tDOUBLE  shift 85
	tIDENTIFIER  shift 102
	tSTRING  shift 86
	tUSE  shift 103
	tDO  shift 104
	tCELL  shift 107
	tINPUT  shift 108
	tNULL  shift 87
	'!'  shift 115
	'+'  shift 116
	'-'  shift 117
	'('  shift 118
	.  error

	expr  goto 150
	literal  goto 128
	funcCall  goto 129
	lval  goto 130
	string  goto 89
	integer  goto 90
	double  goto 91


state 110
	instr : tPRINTLN . expr ';'  (72)

	tINT  shift 84
	tDOUBLE  shift 85
	tIDENTIFIER  shift 102
	tSTRING  shift 86
	tUSE  shift 103
	tDO  shift 104
	tCELL  shift 107
	tINPUT  shift 108
	tNULL  shift 87
	'!'  shift 115
	'+'  shift 116
	'-'  shift 117
	'('  shift 118
	.  error

	expr  goto 151
	literal  goto 128
	funcCall  goto 129
	lval  goto 130
	string  goto 89
	integer  goto 90
	double  goto 91


state 111
	finalInstr : tSTOP . ';'  (66)
	finalInstr : tSTOP . integer ';'  (67)

	tINT  shift 84
	';'  shift 152
	.  error

	integer  goto 153


state 112
	finalInstr : tAGAIN . ';'  (64)
	finalInstr : tAGAIN . integer ';'  (65)

	tINT  shift 84
	';'  shift 154
	.  error

	integer  goto 155


state 113
	sweeping : tSWEEPING . lval tFROM expr tTO expr tDO block  (77)
	sweeping : tSWEEPING . lval tFROM expr tTO expr tBY expr tDO block  (78)

	tIDENTIFIER  shift 102
	tCELL  shift 107
	.  error

	lval  goto 156


state 114
	instrCond : tIF . ifs  (79)

	tINT  shift 84
	tDOUBLE  shift 85
	tIDENTIFIER  shift 102
	tSTRING  shift 86
	tUSE  shift 103
	tDO  shift 104
	tCELL  shift 107
	tINPUT  shift 108
	tNULL  shift 87
	'!'  shift 115
	'+'  shift 116
	'-'  shift 117
	'('  shift 118
	.  error

	expr  goto 157
	ifs  goto 158
	literal  goto 128
	funcCall  goto 129
	lval  goto 130
	string  goto 89
	integer  goto 90
	double  goto 91


state 115
	expr : '!' . expr  (99)

	tINT  shift 84
	tDOUBLE  shift 85
	tIDENTIFIER  shift 102
	tSTRING  shift 86
	tUSE  shift 103
	tDO  shift 104
	tCELL  shift 107
	tINPUT  shift 108
	tNULL  shift 87
	'!'  shift 115
	'+'  shift 116
	'-'  shift 117
	'('  shift 118
	.  error

	expr  goto 159
	literal  goto 128
	funcCall  goto 129
	lval  goto 130
	string  goto 89
	integer  goto 90
	double  goto 91


state 116
	expr : '+' . expr  (88)

	tINT  shift 84
	tDOUBLE  shift 85
	tIDENTIFIER  shift 102
	tSTRING  shift 86
	tUSE  shift 103
	tDO  shift 104
	tCELL  shift 107
	tINPUT  shift 108
	tNULL  shift 87
	'!'  shift 115
	'+'  shift 116
	'-'  shift 117
	'('  shift 118
	.  error

	expr  goto 160
	literal  goto 128
	funcCall  goto 129
	lval  goto 130
	string  goto 89
	integer  goto 90
	double  goto 91


state 117
	expr : '-' . expr  (89)

	tINT  shift 84
	tDOUBLE  shift 85
	tIDENTIFIER  shift 102
	tSTRING  shift 86
	tUSE  shift 103
	tDO  shift 104
	tCELL  shift 107
	tINPUT  shift 108
	tNULL  shift 87
	'!'  shift 115
	'+'  shift 116
	'-'  shift 117
	'('  shift 118
	.  error

	expr  goto 161
	literal  goto 128
	funcCall  goto 129
	lval  goto 130
	string  goto 89
	integer  goto 90
	double  goto 91


state 118
	expr : '(' . expr ')'  (87)

	tINT  shift 84
	tDOUBLE  shift 85
	tIDENTIFIER  shift 102
	tSTRING  shift 86
	tUSE  shift 103
	tDO  shift 104
	tCELL  shift 107
	tINPUT  shift 108
	tNULL  shift 87
	'!'  shift 115
	'+'  shift 116
	'-'  shift 117
	'('  shift 118
	.  error

	expr  goto 162
	literal  goto 128
	funcCall  goto 129
	lval  goto 130
	string  goto 89
	integer  goto 90
	double  goto 91


state 119
	block : '{' '}' .  (55)

	.  reduce 55


state 120
	instr : expr . ';'  (70)
	expr : expr . tOBJECTS  (90)
	expr : expr . '+' expr  (91)
	expr : expr . '-' expr  (92)
	expr : expr . '*' expr  (93)
	expr : expr . '/' expr  (94)
	expr : expr . '%' expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . tEQUALS expr  (98)
	expr : expr . tAND expr  (100)
	expr : expr . tOR expr  (101)

	tAND  shift 163
	tOR  shift 164
	tEQUALS  shift 165
	tOBJECTS  shift 166
	'<'  shift 167
	'>'  shift 168
	'+'  shift 169
	'-'  shift 170
	'*'  shift 171
	'/'  shift 172
	'%'  shift 173
	';'  shift 174
	.  error


state 121
	instr : sweeping .  (75)

	.  reduce 75


state 122
	instr : instrCond .  (74)

	.  reduce 74


state 123
	instrs : instr .  (62)

	.  reduce 62


state 124
	blockInstrs : finalInstr .  (60)

	.  reduce 60


state 125
	blockInstrs : instrs .  (59)
	blockInstrs : instrs . finalInstr  (61)
	instrs : instrs . instr  (63)

	tINT  shift 84
	tDOUBLE  shift 85
	tIDENTIFIER  shift 102
	tSTRING  shift 86
	tUSE  shift 103
	tDO  shift 104
	tRETURN  shift 105
	tASSIGN  shift 106
	tCELL  shift 107
	tINPUT  shift 108
	tPRINT  shift 109
	tPRINTLN  shift 110
	tSTOP  shift 111
	tAGAIN  shift 112
	tSWEEPING  shift 113
	tNULL  shift 87
	tIF  shift 114
	'!'  shift 115
	'+'  shift 116
	'-'  shift 117
	'('  shift 118
	'{'  shift 80
	'}'  reduce 59

	expr  goto 120
	sweeping  goto 121
	instrCond  goto 122
	instr  goto 175
	finalInstr  goto 176
	literal  goto 128
	funcCall  goto 129
	lval  goto 130
	string  goto 89
	integer  goto 90
	double  goto 91
	block  goto 131


state 126
	blockVars : blockVars . blockVar ';'  (35)
	block : '{' blockVars . '}'  (56)
	block : '{' blockVars . blockInstrs '}'  (58)

	tINT  shift 84
	tDOUBLE  shift 85
	tIDENTIFIER  shift 102
	tSTRING  shift 86
	tFAKE  shift 1
	tUSE  shift 103
	tDO  shift 104
	tRETURN  shift 105
	tASSIGN  shift 106
	tCELL  shift 107
	tINPUT  shift 108
	tPRINT  shift 109
	tPRINTLN  shift 110
	tSTOP  shift 111
	tAGAIN  shift 112
	tSWEEPING  shift 113
	tNULL  shift 87
	tIF  shift 114
	tTYPEINT  shift 6
	tTYPEDOUBLE  shift 7
	tTYPESTRING  shift 8
	'!'  shift 115
	'+'  shift 116
	'-'  shift 117
	'('  shift 118
	'{'  shift 80
	'}'  shift 177
	.  error

	expr  goto 120
	sweeping  goto 121
	instrCond  goto 122
	instr  goto 123
	finalInstr  goto 124
	instrs  goto 125
	blockInstrs  goto 178
	literal  goto 128
	funcCall  goto 129
	lval  goto 130
	string  goto 89
	integer  goto 90
	double  goto 91
	block  goto 131
	intPtr  goto 11
	doublePtr  goto 12
	stringPtr  goto 13
	type  goto 132
	blockVar  goto 179


state 127
	block : '{' blockInstrs . '}'  (57)

	'}'  shift 180
	.  error


state 128
	expr : literal .  (85)

	.  reduce 85


state 129
	expr : funcCall .  (86)

	.  reduce 86


state 130
	expr : lval .  (102)
	expr : lval . '?'  (103)

	'?'  shift 181
	tDO  reduce 102
	tFOR  reduce 102
	tAND  reduce 102
	tOR  reduce 102
	tEQUALS  reduce 102
	tTO  reduce 102
	tAT  reduce 102
	tOBJECTS  reduce 102
	tTHEN  reduce 102
	tBY  reduce 102
	'<'  reduce 102
	'>'  reduce 102
	'+'  reduce 102
	'-'  reduce 102
	'*'  reduce 102
	'/'  reduce 102
	'%'  reduce 102
	';'  reduce 102
	','  reduce 102
	')'  reduce 102


state 131
	instr : block .  (76)

	.  reduce 76


state 132
	blockVar : type . tIDENTIFIER  (36)
	blockVar : type . tIDENTIFIER '(' tINITIALLY expr ')'  (37)

	tIDENTIFIER  shift 182
	.  error


state 133
	blockVars : blockVar . ';'  (34)

	';'  shift 183
	.  error


state 134
	funcDef : tDEFINE type tFUNCTION tIDENTIFIER tON params . tAS block  (13)
	params : params . ',' param  (32)

	tAS  shift 184
	','  shift 74
	.  error


state 135
	funcDef : tDEFINE type tFUNCTION tIDENTIFIER tAS block .  (11)

	.  reduce 11


state 136
	var : type tIDENTIFIER '(' tINITIALLY literal ')' .  (39)

	.  reduce 39


state 137
	string : string tSTRING .  (115)

	.  reduce 115


state 138
	var : tPUBLIC type tIDENTIFIER '(' tINITIALLY literal ')' .  (41)

	.  reduce 41


state 139
	funcDef : tDEFINE tPUBLIC tPROCEDURE tIDENTIFIER tON params tAS . block  (18)

	'{'  shift 80
	.  error

	block  goto 185


state 140
	funcDef : tDEFINE tPUBLIC type tFUNCTION tIDENTIFIER tON params . tAS block  (17)
	params : params . ',' param  (32)

	tAS  shift 186
	','  shift 74
	.  error


state 141
	funcDef : tDEFINE tPUBLIC type tFUNCTION tIDENTIFIER tAS block .  (15)

	.  reduce 15


state 142
	funcDef : tDEFINE tPROCEDURE tIDENTIFIER tON params tAS block .  (14)

	.  reduce 14


state 143
	exprs : expr .  (83)
	expr : expr . tOBJECTS  (90)
	expr : expr . '+' expr  (91)
	expr : expr . '-' expr  (92)
	expr : expr . '*' expr  (93)
	expr : expr . '/' expr  (94)
	expr : expr . '%' expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . tEQUALS expr  (98)
	expr : expr . tAND expr  (100)
	expr : expr . tOR expr  (101)

	tAND  shift 163
	tOR  shift 164
	tEQUALS  shift 165
	tOBJECTS  shift 166
	'<'  shift 167
	'>'  shift 168
	'+'  shift 169
	'-'  shift 170
	'*'  shift 171
	'/'  shift 172
	'%'  shift 173
	tFOR  reduce 83
	','  reduce 83


state 144
	funcCall : tUSE exprs . tFOR tIDENTIFIER  (9)
	exprs : exprs . ',' expr  (84)

	tFOR  shift 187
	','  shift 188
	.  error


state 145
	funcCall : tDO tIDENTIFIER .  (10)

	.  reduce 10


state 146
	finalInstr : tRETURN ';' .  (68)

	.  reduce 68


state 147
	finalInstr : tRETURN expr . ';'  (69)
	expr : expr . tOBJECTS  (90)
	expr : expr . '+' expr  (91)
	expr : expr . '-' expr  (92)
	expr : expr . '*' expr  (93)
	expr : expr . '/' expr  (94)
	expr : expr . '%' expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . tEQUALS expr  (98)
	expr : expr . tAND expr  (100)
	expr : expr . tOR expr  (101)

	tAND  shift 163
	tOR  shift 164
	tEQUALS  shift 165
	tOBJECTS  shift 166
	'<'  shift 167
	'>'  shift 168
	'+'  shift 169
	'-'  shift 170
	'*'  shift 171
	'/'  shift 172
	'%'  shift 173
	';'  shift 189
	.  error


state 148
	instr : tASSIGN expr . tTO lval ';'  (73)
	expr : expr . tOBJECTS  (90)
	expr : expr . '+' expr  (91)
	expr : expr . '-' expr  (92)
	expr : expr . '*' expr  (93)
	expr : expr . '/' expr  (94)
	expr : expr . '%' expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . tEQUALS expr  (98)
	expr : expr . tAND expr  (100)
	expr : expr . tOR expr  (101)

	tAND  shift 163
	tOR  shift 164
	tEQUALS  shift 165
	tTO  shift 190
	tOBJECTS  shift 166
	'<'  shift 167
	'>'  shift 168
	'+'  shift 169
	'-'  shift 170
	'*'  shift 171
	'/'  shift 172
	'%'  shift 173
	.  error


state 149
	expr : expr . tOBJECTS  (90)
	expr : expr . '+' expr  (91)
	expr : expr . '-' expr  (92)
	expr : expr . '*' expr  (93)
	expr : expr . '/' expr  (94)
	expr : expr . '%' expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . tEQUALS expr  (98)
	expr : expr . tAND expr  (100)
	expr : expr . tOR expr  (101)
	lval : tCELL expr . tAT lval  (105)
	lval : tCELL expr . tAT '(' expr ')'  (106)

	tAND  shift 163
	tOR  shift 164
	tEQUALS  shift 165
	tAT  shift 191
	tOBJECTS  shift 166
	'<'  shift 167
	'>'  shift 168
	'+'  shift 169
	'-'  shift 170
	'*'  shift 171
	'/'  shift 172
	'%'  shift 173
	.  error


state 150
	instr : tPRINT expr . ';'  (71)
	expr : expr . tOBJECTS  (90)
	expr : expr . '+' expr  (91)
	expr : expr . '-' expr  (92)
	expr : expr . '*' expr  (93)
	expr : expr . '/' expr  (94)
	expr : expr . '%' expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . tEQUALS expr  (98)
	expr : expr . tAND expr  (100)
	expr : expr . tOR expr  (101)

	tAND  shift 163
	tOR  shift 164
	tEQUALS  shift 165
	tOBJECTS  shift 166
	'<'  shift 167
	'>'  shift 168
	'+'  shift 169
	'-'  shift 170
	'*'  shift 171
	'/'  shift 172
	'%'  shift 173
	';'  shift 192
	.  error


state 151
	instr : tPRINTLN expr . ';'  (72)
	expr : expr . tOBJECTS  (90)
	expr : expr . '+' expr  (91)
	expr : expr . '-' expr  (92)
	expr : expr . '*' expr  (93)
	expr : expr . '/' expr  (94)
	expr : expr . '%' expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . tEQUALS expr  (98)
	expr : expr . tAND expr  (100)
	expr : expr . tOR expr  (101)

	tAND  shift 163
	tOR  shift 164
	tEQUALS  shift 165
	tOBJECTS  shift 166
	'<'  shift 167
	'>'  shift 168
	'+'  shift 169
	'-'  shift 170
	'*'  shift 171
	'/'  shift 172
	'%'  shift 173
	';'  shift 193
	.  error


state 152
	finalInstr : tSTOP ';' .  (66)

	.  reduce 66


state 153
	finalInstr : tSTOP integer . ';'  (67)

	';'  shift 194
	.  error


state 154
	finalInstr : tAGAIN ';' .  (64)

	.  reduce 64


state 155
	finalInstr : tAGAIN integer . ';'  (65)

	';'  shift 195
	.  error


state 156
	sweeping : tSWEEPING lval . tFROM expr tTO expr tDO block  (77)
	sweeping : tSWEEPING lval . tFROM expr tTO expr tBY expr tDO block  (78)

	tFROM  shift 196
	.  error


state 157
	ifs : expr . tTHEN block  (80)
	ifs : expr . tTHEN block tELSE block  (81)
	ifs : expr . tTHEN block tELSIF ifs  (82)
	expr : expr . tOBJECTS  (90)
	expr : expr . '+' expr  (91)
	expr : expr . '-' expr  (92)
	expr : expr . '*' expr  (93)
	expr : expr . '/' expr  (94)
	expr : expr . '%' expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . tEQUALS expr  (98)
	expr : expr . tAND expr  (100)
	expr : expr . tOR expr  (101)

	tAND  shift 163
	tOR  shift 164
	tEQUALS  shift 165
	tOBJECTS  shift 166
	tTHEN  shift 197
	'<'  shift 167
	'>'  shift 168
	'+'  shift 169
	'-'  shift 170
	'*'  shift 171
	'/'  shift 172
	'%'  shift 173
	.  error


state 158
	instrCond : tIF ifs .  (79)

	.  reduce 79


state 159
	expr : expr . tOBJECTS  (90)
	expr : expr . '+' expr  (91)
	expr : expr . '-' expr  (92)
	expr : expr . '*' expr  (93)
	expr : expr . '/' expr  (94)
	expr : expr . '%' expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . tEQUALS expr  (98)
	expr : '!' expr .  (99)
	expr : expr . tAND expr  (100)
	expr : expr . tOR expr  (101)

	tEQUALS  shift 165
	tOBJECTS  shift 166
	'<'  shift 167
	'>'  shift 168
	'+'  shift 169
	'-'  shift 170
	'*'  shift 171
	'/'  shift 172
	'%'  shift 173
	tDO  reduce 99
	tFOR  reduce 99
	tAND  reduce 99
	tOR  reduce 99
	tTO  reduce 99
	tAT  reduce 99
	tTHEN  reduce 99
	tBY  reduce 99
	';'  reduce 99
	','  reduce 99
	')'  reduce 99


state 160
	expr : '+' expr .  (88)
	expr : expr . tOBJECTS  (90)
	expr : expr . '+' expr  (91)
	expr : expr . '-' expr  (92)
	expr : expr . '*' expr  (93)
	expr : expr . '/' expr  (94)
	expr : expr . '%' expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . tEQUALS expr  (98)
	expr : expr . tAND expr  (100)
	expr : expr . tOR expr  (101)

	.  reduce 88


state 161
	expr : '-' expr .  (89)
	expr : expr . tOBJECTS  (90)
	expr : expr . '+' expr  (91)
	expr : expr . '-' expr  (92)
	expr : expr . '*' expr  (93)
	expr : expr . '/' expr  (94)
	expr : expr . '%' expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . tEQUALS expr  (98)
	expr : expr . tAND expr  (100)
	expr : expr . tOR expr  (101)

	.  reduce 89


state 162
	expr : '(' expr . ')'  (87)
	expr : expr . tOBJECTS  (90)
	expr : expr . '+' expr  (91)
	expr : expr . '-' expr  (92)
	expr : expr . '*' expr  (93)
	expr : expr . '/' expr  (94)
	expr : expr . '%' expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . tEQUALS expr  (98)
	expr : expr . tAND expr  (100)
	expr : expr . tOR expr  (101)

	tAND  shift 163
	tOR  shift 164
	tEQUALS  shift 165
	tOBJECTS  shift 166
	'<'  shift 167
	'>'  shift 168
	'+'  shift 169
	'-'  shift 170
	'*'  shift 171
	'/'  shift 172
	'%'  shift 173
	')'  shift 198
	.  error


state 163
	expr : expr tAND . expr  (100)

	tINT  shift 84
	tDOUBLE  shift 85
	tIDENTIFIER  shift 102
	tSTRING  shift 86
	tUSE  shift 103
	tDO  shift 104
	tCELL  shift 107
	tINPUT  shift 108
	tNULL  shift 87
	'!'  shift 115
	'+'  shift 116
	'-'  shift 117
	'('  shift 118
	.  error

	expr  goto 199
	literal  goto 128
	funcCall  goto 129
	lval  goto 130
	string  goto 89
	integer  goto 90
	double  goto 91


state 164
	expr : expr tOR . expr  (101)

	tINT  shift 84
	tDOUBLE  shift 85
	tIDENTIFIER  shift 102
	tSTRING  shift 86
	tUSE  shift 103
	tDO  shift 104
	tCELL  shift 107
	tINPUT  shift 108
	tNULL  shift 87
	'!'  shift 115
	'+'  shift 116
	'-'  shift 117
	'('  shift 118
	.  error

	expr  goto 200
	literal  goto 128
	funcCall  goto 129
	lval  goto 130
	string  goto 89
	integer  goto 90
	double  goto 91


state 165
	expr : expr tEQUALS . expr  (98)

	tINT  shift 84
	tDOUBLE  shift 85
	tIDENTIFIER  shift 102
	tSTRING  shift 86
	tUSE  shift 103
	tDO  shift 104
	tCELL  shift 107
	tINPUT  shift 108
	tNULL  shift 87
	'!'  shift 115
	'+'  shift 116
	'-'  shift 117
	'('  shift 118
	.  error

	expr  goto 201
	literal  goto 128
	funcCall  goto 129
	lval  goto 130
	string  goto 89
	integer  goto 90
	double  goto 91


state 166
	expr : expr tOBJECTS .  (90)

	.  reduce 90


state 167
	expr : expr '<' . expr  (96)

	tINT  shift 84
	tDOUBLE  shift 85
	tIDENTIFIER  shift 102
	tSTRING  shift 86
	tUSE  shift 103
	tDO  shift 104
	tCELL  shift 107
	tINPUT  shift 108
	tNULL  shift 87
	'!'  shift 115
	'+'  shift 116
	'-'  shift 117
	'('  shift 118
	.  error

	expr  goto 202
	literal  goto 128
	funcCall  goto 129
	lval  goto 130
	string  goto 89
	integer  goto 90
	double  goto 91


state 168
	expr : expr '>' . expr  (97)

	tINT  shift 84
	tDOUBLE  shift 85
	tIDENTIFIER  shift 102
	tSTRING  shift 86
	tUSE  shift 103
	tDO  shift 104
	tCELL  shift 107
	tINPUT  shift 108
	tNULL  shift 87
	'!'  shift 115
	'+'  shift 116
	'-'  shift 117
	'('  shift 118
	.  error

	expr  goto 203
	literal  goto 128
	funcCall  goto 129
	lval  goto 130
	string  goto 89
	integer  goto 90
	double  goto 91


state 169
	expr : expr '+' . expr  (91)

	tINT  shift 84
	tDOUBLE  shift 85
	tIDENTIFIER  shift 102
	tSTRING  shift 86
	tUSE  shift 103
	tDO  shift 104
	tCELL  shift 107
	tINPUT  shift 108
	tNULL  shift 87
	'!'  shift 115
	'+'  shift 116
	'-'  shift 117
	'('  shift 118
	.  error

	expr  goto 204
	literal  goto 128
	funcCall  goto 129
	lval  goto 130
	string  goto 89
	integer  goto 90
	double  goto 91


state 170
	expr : expr '-' . expr  (92)

	tINT  shift 84
	tDOUBLE  shift 85
	tIDENTIFIER  shift 102
	tSTRING  shift 86
	tUSE  shift 103
	tDO  shift 104
	tCELL  shift 107
	tINPUT  shift 108
	tNULL  shift 87
	'!'  shift 115
	'+'  shift 116
	'-'  shift 117
	'('  shift 118
	.  error

	expr  goto 205
	literal  goto 128
	funcCall  goto 129
	lval  goto 130
	string  goto 89
	integer  goto 90
	double  goto 91


state 171
	expr : expr '*' . expr  (93)

	tINT  shift 84
	tDOUBLE  shift 85
	tIDENTIFIER  shift 102
	tSTRING  shift 86
	tUSE  shift 103
	tDO  shift 104
	tCELL  shift 107
	tINPUT  shift 108
	tNULL  shift 87
	'!'  shift 115
	'+'  shift 116
	'-'  shift 117
	'('  shift 118
	.  error

	expr  goto 206
	literal  goto 128
	funcCall  goto 129
	lval  goto 130
	string  goto 89
	integer  goto 90
	double  goto 91


state 172
	expr : expr '/' . expr  (94)

	tINT  shift 84
	tDOUBLE  shift 85
	tIDENTIFIER  shift 102
	tSTRING  shift 86
	tUSE  shift 103
	tDO  shift 104
	tCELL  shift 107
	tINPUT  shift 108
	tNULL  shift 87
	'!'  shift 115
	'+'  shift 116
	'-'  shift 117
	'('  shift 118
	.  error

	expr  goto 207
	literal  goto 128
	funcCall  goto 129
	lval  goto 130
	string  goto 89
	integer  goto 90
	double  goto 91


state 173
	expr : expr '%' . expr  (95)

	tINT  shift 84
	tDOUBLE  shift 85
	tIDENTIFIER  shift 102
	tSTRING  shift 86
	tUSE  shift 103
	tDO  shift 104
	tCELL  shift 107
	tINPUT  shift 108
	tNULL  shift 87
	'!'  shift 115
	'+'  shift 116
	'-'  shift 117
	'('  shift 118
	.  error

	expr  goto 208
	literal  goto 128
	funcCall  goto 129
	lval  goto 130
	string  goto 89
	integer  goto 90
	double  goto 91


state 174
	instr : expr ';' .  (70)

	.  reduce 70


state 175
	instrs : instrs instr .  (63)

	.  reduce 63


state 176
	blockInstrs : instrs finalInstr .  (61)

	.  reduce 61


state 177
	block : '{' blockVars '}' .  (56)

	.  reduce 56


state 178
	block : '{' blockVars blockInstrs . '}'  (58)

	'}'  shift 209
	.  error


state 179
	blockVars : blockVars blockVar . ';'  (35)

	';'  shift 210
	.  error


state 180
	block : '{' blockInstrs '}' .  (57)

	.  reduce 57


state 181
	expr : lval '?' .  (103)

	.  reduce 103


state 182
	blockVar : type tIDENTIFIER .  (36)
	blockVar : type tIDENTIFIER . '(' tINITIALLY expr ')'  (37)

	'('  shift 211
	';'  reduce 36


state 183
	blockVars : blockVar ';' .  (34)

	.  reduce 34


state 184
	funcDef : tDEFINE type tFUNCTION tIDENTIFIER tON params tAS . block  (13)

	'{'  shift 80
	.  error

	block  goto 212


state 185
	funcDef : tDEFINE tPUBLIC tPROCEDURE tIDENTIFIER tON params tAS block .  (18)

	.  reduce 18


state 186
	funcDef : tDEFINE tPUBLIC type tFUNCTION tIDENTIFIER tON params tAS . block  (17)

	'{'  shift 80
	.  error

	block  goto 213


state 187
	funcCall : tUSE exprs tFOR . tIDENTIFIER  (9)

	tIDENTIFIER  shift 214
	.  error


state 188
	exprs : exprs ',' . expr  (84)

	tINT  shift 84
	tDOUBLE  shift 85
	tIDENTIFIER  shift 102
	tSTRING  shift 86
	tUSE  shift 103
	tDO  shift 104
	tCELL  shift 107
	tINPUT  shift 108
	tNULL  shift 87
	'!'  shift 115
	'+'  shift 116
	'-'  shift 117
	'('  shift 118
	.  error

	expr  goto 215
	literal  goto 128
	funcCall  goto 129
	lval  goto 130
	string  goto 89
	integer  goto 90
	double  goto 91


state 189
	finalInstr : tRETURN expr ';' .  (69)

	.  reduce 69


state 190
	instr : tASSIGN expr tTO . lval ';'  (73)

	tIDENTIFIER  shift 102
	tCELL  shift 107
	.  error

	lval  goto 216


state 191
	lval : tCELL expr tAT . lval  (105)
	lval : tCELL expr tAT . '(' expr ')'  (106)

	tIDENTIFIER  shift 102
	tCELL  shift 107
	'('  shift 217
	.  error

	lval  goto 218


state 192
	instr : tPRINT expr ';' .  (71)

	.  reduce 71


state 193
	instr : tPRINTLN expr ';' .  (72)

	.  reduce 72


state 194
	finalInstr : tSTOP integer ';' .  (67)

	.  reduce 67


state 195
	finalInstr : tAGAIN integer ';' .  (65)

	.  reduce 65


state 196
	sweeping : tSWEEPING lval tFROM . expr tTO expr tDO block  (77)
	sweeping : tSWEEPING lval tFROM . expr tTO expr tBY expr tDO block  (78)

	tINT  shift 84
	tDOUBLE  shift 85
	tIDENTIFIER  shift 102
	tSTRING  shift 86
	tUSE  shift 103
	tDO  shift 104
	tCELL  shift 107
	tINPUT  shift 108
	tNULL  shift 87
	'!'  shift 115
	'+'  shift 116
	'-'  shift 117
	'('  shift 118
	.  error

	expr  goto 219
	literal  goto 128
	funcCall  goto 129
	lval  goto 130
	string  goto 89
	integer  goto 90
	double  goto 91


state 197
	ifs : expr tTHEN . block  (80)
	ifs : expr tTHEN . block tELSE block  (81)
	ifs : expr tTHEN . block tELSIF ifs  (82)

	'{'  shift 80
	.  error

	block  goto 220


state 198
	expr : '(' expr ')' .  (87)

	.  reduce 87


state 199
	expr : expr . tOBJECTS  (90)
	expr : expr . '+' expr  (91)
	expr : expr . '-' expr  (92)
	expr : expr . '*' expr  (93)
	expr : expr . '/' expr  (94)
	expr : expr . '%' expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . tEQUALS expr  (98)
	expr : expr . tAND expr  (100)
	expr : expr tAND expr .  (100)
	expr : expr . tOR expr  (101)

	tEQUALS  shift 165
	tOBJECTS  shift 166
	'<'  shift 167
	'>'  shift 168
	'+'  shift 169
	'-'  shift 170
	'*'  shift 171
	'/'  shift 172
	'%'  shift 173
	tDO  reduce 100
	tFOR  reduce 100
	tAND  reduce 100
	tOR  reduce 100
	tTO  reduce 100
	tAT  reduce 100
	tTHEN  reduce 100
	tBY  reduce 100
	';'  reduce 100
	','  reduce 100
	')'  reduce 100


state 200
	expr : expr . tOBJECTS  (90)
	expr : expr . '+' expr  (91)
	expr : expr . '-' expr  (92)
	expr : expr . '*' expr  (93)
	expr : expr . '/' expr  (94)
	expr : expr . '%' expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . tEQUALS expr  (98)
	expr : expr . tAND expr  (100)
	expr : expr . tOR expr  (101)
	expr : expr tOR expr .  (101)

	tAND  shift 163
	tEQUALS  shift 165
	tOBJECTS  shift 166
	'<'  shift 167
	'>'  shift 168
	'+'  shift 169
	'-'  shift 170
	'*'  shift 171
	'/'  shift 172
	'%'  shift 173
	tDO  reduce 101
	tFOR  reduce 101
	tOR  reduce 101
	tTO  reduce 101
	tAT  reduce 101
	tTHEN  reduce 101
	tBY  reduce 101
	';'  reduce 101
	','  reduce 101
	')'  reduce 101


state 201
	expr : expr . tOBJECTS  (90)
	expr : expr . '+' expr  (91)
	expr : expr . '-' expr  (92)
	expr : expr . '*' expr  (93)
	expr : expr . '/' expr  (94)
	expr : expr . '%' expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . tEQUALS expr  (98)
	expr : expr tEQUALS expr .  (98)
	expr : expr . tAND expr  (100)
	expr : expr . tOR expr  (101)

	tOBJECTS  shift 166
	'<'  shift 167
	'>'  shift 168
	'+'  shift 169
	'-'  shift 170
	'*'  shift 171
	'/'  shift 172
	'%'  shift 173
	tDO  reduce 98
	tFOR  reduce 98
	tAND  reduce 98
	tOR  reduce 98
	tEQUALS  reduce 98
	tTO  reduce 98
	tAT  reduce 98
	tTHEN  reduce 98
	tBY  reduce 98
	';'  reduce 98
	','  reduce 98
	')'  reduce 98


state 202
	expr : expr . tOBJECTS  (90)
	expr : expr . '+' expr  (91)
	expr : expr . '-' expr  (92)
	expr : expr . '*' expr  (93)
	expr : expr . '/' expr  (94)
	expr : expr . '%' expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr '<' expr .  (96)
	expr : expr . '>' expr  (97)
	expr : expr . tEQUALS expr  (98)
	expr : expr . tAND expr  (100)
	expr : expr . tOR expr  (101)

	tOBJECTS  shift 166
	'+'  shift 169
	'-'  shift 170
	'*'  shift 171
	'/'  shift 172
	'%'  shift 173
	tDO  reduce 96
	tFOR  reduce 96
	tAND  reduce 96
	tOR  reduce 96
	tEQUALS  reduce 96
	tTO  reduce 96
	tAT  reduce 96
	tTHEN  reduce 96
	tBY  reduce 96
	'<'  reduce 96
	'>'  reduce 96
	';'  reduce 96
	','  reduce 96
	')'  reduce 96


state 203
	expr : expr . tOBJECTS  (90)
	expr : expr . '+' expr  (91)
	expr : expr . '-' expr  (92)
	expr : expr . '*' expr  (93)
	expr : expr . '/' expr  (94)
	expr : expr . '%' expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr '>' expr .  (97)
	expr : expr . tEQUALS expr  (98)
	expr : expr . tAND expr  (100)
	expr : expr . tOR expr  (101)

	tOBJECTS  shift 166
	'+'  shift 169
	'-'  shift 170
	'*'  shift 171
	'/'  shift 172
	'%'  shift 173
	tDO  reduce 97
	tFOR  reduce 97
	tAND  reduce 97
	tOR  reduce 97
	tEQUALS  reduce 97
	tTO  reduce 97
	tAT  reduce 97
	tTHEN  reduce 97
	tBY  reduce 97
	'<'  reduce 97
	'>'  reduce 97
	';'  reduce 97
	','  reduce 97
	')'  reduce 97


state 204
	expr : expr . tOBJECTS  (90)
	expr : expr . '+' expr  (91)
	expr : expr '+' expr .  (91)
	expr : expr . '-' expr  (92)
	expr : expr . '*' expr  (93)
	expr : expr . '/' expr  (94)
	expr : expr . '%' expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . tEQUALS expr  (98)
	expr : expr . tAND expr  (100)
	expr : expr . tOR expr  (101)

	tOBJECTS  shift 166
	'*'  shift 171
	'/'  shift 172
	'%'  shift 173
	tDO  reduce 91
	tFOR  reduce 91
	tAND  reduce 91
	tOR  reduce 91
	tEQUALS  reduce 91
	tTO  reduce 91
	tAT  reduce 91
	tTHEN  reduce 91
	tBY  reduce 91
	'<'  reduce 91
	'>'  reduce 91
	'+'  reduce 91
	'-'  reduce 91
	';'  reduce 91
	','  reduce 91
	')'  reduce 91


state 205
	expr : expr . tOBJECTS  (90)
	expr : expr . '+' expr  (91)
	expr : expr . '-' expr  (92)
	expr : expr '-' expr .  (92)
	expr : expr . '*' expr  (93)
	expr : expr . '/' expr  (94)
	expr : expr . '%' expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . tEQUALS expr  (98)
	expr : expr . tAND expr  (100)
	expr : expr . tOR expr  (101)

	tOBJECTS  shift 166
	'*'  shift 171
	'/'  shift 172
	'%'  shift 173
	tDO  reduce 92
	tFOR  reduce 92
	tAND  reduce 92
	tOR  reduce 92
	tEQUALS  reduce 92
	tTO  reduce 92
	tAT  reduce 92
	tTHEN  reduce 92
	tBY  reduce 92
	'<'  reduce 92
	'>'  reduce 92
	'+'  reduce 92
	'-'  reduce 92
	';'  reduce 92
	','  reduce 92
	')'  reduce 92


state 206
	expr : expr . tOBJECTS  (90)
	expr : expr . '+' expr  (91)
	expr : expr . '-' expr  (92)
	expr : expr . '*' expr  (93)
	expr : expr '*' expr .  (93)
	expr : expr . '/' expr  (94)
	expr : expr . '%' expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . tEQUALS expr  (98)
	expr : expr . tAND expr  (100)
	expr : expr . tOR expr  (101)

	tOBJECTS  shift 166
	tDO  reduce 93
	tFOR  reduce 93
	tAND  reduce 93
	tOR  reduce 93
	tEQUALS  reduce 93
	tTO  reduce 93
	tAT  reduce 93
	tTHEN  reduce 93
	tBY  reduce 93
	'<'  reduce 93
	'>'  reduce 93
	'+'  reduce 93
	'-'  reduce 93
	'*'  reduce 93
	'/'  reduce 93
	'%'  reduce 93
	';'  reduce 93
	','  reduce 93
	')'  reduce 93


state 207
	expr : expr . tOBJECTS  (90)
	expr : expr . '+' expr  (91)
	expr : expr . '-' expr  (92)
	expr : expr . '*' expr  (93)
	expr : expr . '/' expr  (94)
	expr : expr '/' expr .  (94)
	expr : expr . '%' expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . tEQUALS expr  (98)
	expr : expr . tAND expr  (100)
	expr : expr . tOR expr  (101)

	tOBJECTS  shift 166
	tDO  reduce 94
	tFOR  reduce 94
	tAND  reduce 94
	tOR  reduce 94
	tEQUALS  reduce 94
	tTO  reduce 94
	tAT  reduce 94
	tTHEN  reduce 94
	tBY  reduce 94
	'<'  reduce 94
	'>'  reduce 94
	'+'  reduce 94
	'-'  reduce 94
	'*'  reduce 94
	'/'  reduce 94
	'%'  reduce 94
	';'  reduce 94
	','  reduce 94
	')'  reduce 94


state 208
	expr : expr . tOBJECTS  (90)
	expr : expr . '+' expr  (91)
	expr : expr . '-' expr  (92)
	expr : expr . '*' expr  (93)
	expr : expr . '/' expr  (94)
	expr : expr . '%' expr  (95)
	expr : expr '%' expr .  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . tEQUALS expr  (98)
	expr : expr . tAND expr  (100)
	expr : expr . tOR expr  (101)

	tOBJECTS  shift 166
	tDO  reduce 95
	tFOR  reduce 95
	tAND  reduce 95
	tOR  reduce 95
	tEQUALS  reduce 95
	tTO  reduce 95
	tAT  reduce 95
	tTHEN  reduce 95
	tBY  reduce 95
	'<'  reduce 95
	'>'  reduce 95
	'+'  reduce 95
	'-'  reduce 95
	'*'  reduce 95
	'/'  reduce 95
	'%'  reduce 95
	';'  reduce 95
	','  reduce 95
	')'  reduce 95


state 209
	block : '{' blockVars blockInstrs '}' .  (58)

	.  reduce 58


state 210
	blockVars : blockVars blockVar ';' .  (35)

	.  reduce 35


state 211
	blockVar : type tIDENTIFIER '(' . tINITIALLY expr ')'  (37)

	tINITIALLY  shift 221
	.  error


state 212
	funcDef : tDEFINE type tFUNCTION tIDENTIFIER tON params tAS block .  (13)

	.  reduce 13


state 213
	funcDef : tDEFINE tPUBLIC type tFUNCTION tIDENTIFIER tON params tAS block .  (17)

	.  reduce 17


state 214
	funcCall : tUSE exprs tFOR tIDENTIFIER .  (9)

	.  reduce 9


state 215
	exprs : exprs ',' expr .  (84)
	expr : expr . tOBJECTS  (90)
	expr : expr . '+' expr  (91)
	expr : expr . '-' expr  (92)
	expr : expr . '*' expr  (93)
	expr : expr . '/' expr  (94)
	expr : expr . '%' expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . tEQUALS expr  (98)
	expr : expr . tAND expr  (100)
	expr : expr . tOR expr  (101)

	tAND  shift 163
	tOR  shift 164
	tEQUALS  shift 165
	tOBJECTS  shift 166
	'<'  shift 167
	'>'  shift 168
	'+'  shift 169
	'-'  shift 170
	'*'  shift 171
	'/'  shift 172
	'%'  shift 173
	tFOR  reduce 84
	','  reduce 84


state 216
	instr : tASSIGN expr tTO lval . ';'  (73)

	';'  shift 222
	.  error


state 217
	lval : tCELL expr tAT '(' . expr ')'  (106)

	tINT  shift 84
	tDOUBLE  shift 85
	tIDENTIFIER  shift 102
	tSTRING  shift 86
	tUSE  shift 103
	tDO  shift 104
	tCELL  shift 107
	tINPUT  shift 108
	tNULL  shift 87
	'!'  shift 115
	'+'  shift 116
	'-'  shift 117
	'('  shift 118
	.  error

	expr  goto 223
	literal  goto 128
	funcCall  goto 129
	lval  goto 130
	string  goto 89
	integer  goto 90
	double  goto 91


state 218
	lval : tCELL expr tAT lval .  (105)

	.  reduce 105


state 219
	sweeping : tSWEEPING lval tFROM expr . tTO expr tDO block  (77)
	sweeping : tSWEEPING lval tFROM expr . tTO expr tBY expr tDO block  (78)
	expr : expr . tOBJECTS  (90)
	expr : expr . '+' expr  (91)
	expr : expr . '-' expr  (92)
	expr : expr . '*' expr  (93)
	expr : expr . '/' expr  (94)
	expr : expr . '%' expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . tEQUALS expr  (98)
	expr : expr . tAND expr  (100)
	expr : expr . tOR expr  (101)

	tAND  shift 163
	tOR  shift 164
	tEQUALS  shift 165
	tTO  shift 224
	tOBJECTS  shift 166
	'<'  shift 167
	'>'  shift 168
	'+'  shift 169
	'-'  shift 170
	'*'  shift 171
	'/'  shift 172
	'%'  shift 173
	.  error


state 220
	ifs : expr tTHEN block .  (80)
	ifs : expr tTHEN block . tELSE block  (81)
	ifs : expr tTHEN block . tELSIF ifs  (82)

	tELSIF  shift 225
	tELSE  shift 226
	tINT  reduce 80
	tDOUBLE  reduce 80
	tIDENTIFIER  reduce 80
	tSTRING  reduce 80
	tUSE  reduce 80
	tDO  reduce 80
	tRETURN  reduce 80
	tASSIGN  reduce 80
	tCELL  reduce 80
	tINPUT  reduce 80
	tPRINT  reduce 80
	tPRINTLN  reduce 80
	tSTOP  reduce 80
	tAGAIN  reduce 80
	tSWEEPING  reduce 80
	tNULL  reduce 80
	tIF  reduce 80
	'!'  reduce 80
	'+'  reduce 80
	'-'  reduce 80
	'('  reduce 80
	'{'  reduce 80
	'}'  reduce 80


state 221
	blockVar : type tIDENTIFIER '(' tINITIALLY . expr ')'  (37)

	tINT  shift 84
	tDOUBLE  shift 85
	tIDENTIFIER  shift 102
	tSTRING  shift 86
	tUSE  shift 103
	tDO  shift 104
	tCELL  shift 107
	tINPUT  shift 108
	tNULL  shift 87
	'!'  shift 115
	'+'  shift 116
	'-'  shift 117
	'('  shift 118
	.  error

	expr  goto 227
	literal  goto 128
	funcCall  goto 129
	lval  goto 130
	string  goto 89
	integer  goto 90
	double  goto 91


state 222
	instr : tASSIGN expr tTO lval ';' .  (73)

	.  reduce 73


state 223
	expr : expr . tOBJECTS  (90)
	expr : expr . '+' expr  (91)
	expr : expr . '-' expr  (92)
	expr : expr . '*' expr  (93)
	expr : expr . '/' expr  (94)
	expr : expr . '%' expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . tEQUALS expr  (98)
	expr : expr . tAND expr  (100)
	expr : expr . tOR expr  (101)
	lval : tCELL expr tAT '(' expr . ')'  (106)

	tAND  shift 163
	tOR  shift 164
	tEQUALS  shift 165
	tOBJECTS  shift 166
	'<'  shift 167
	'>'  shift 168
	'+'  shift 169
	'-'  shift 170
	'*'  shift 171
	'/'  shift 172
	'%'  shift 173
	')'  shift 228
	.  error


state 224
	sweeping : tSWEEPING lval tFROM expr tTO . expr tDO block  (77)
	sweeping : tSWEEPING lval tFROM expr tTO . expr tBY expr tDO block  (78)

	tINT  shift 84
	tDOUBLE  shift 85
	tIDENTIFIER  shift 102
	tSTRING  shift 86
	tUSE  shift 103
	tDO  shift 104
	tCELL  shift 107
	tINPUT  shift 108
	tNULL  shift 87
	'!'  shift 115
	'+'  shift 116
	'-'  shift 117
	'('  shift 118
	.  error

	expr  goto 229
	literal  goto 128
	funcCall  goto 129
	lval  goto 130
	string  goto 89
	integer  goto 90
	double  goto 91


state 225
	ifs : expr tTHEN block tELSIF . ifs  (82)

	tINT  shift 84
	tDOUBLE  shift 85
	tIDENTIFIER  shift 102
	tSTRING  shift 86
	tUSE  shift 103
	tDO  shift 104
	tCELL  shift 107
	tINPUT  shift 108
	tNULL  shift 87
	'!'  shift 115
	'+'  shift 116
	'-'  shift 117
	'('  shift 118
	.  error

	expr  goto 157
	ifs  goto 230
	literal  goto 128
	funcCall  goto 129
	lval  goto 130
	string  goto 89
	integer  goto 90
	double  goto 91


state 226
	ifs : expr tTHEN block tELSE . block  (81)

	'{'  shift 80
	.  error

	block  goto 231


state 227
	blockVar : type tIDENTIFIER '(' tINITIALLY expr . ')'  (37)
	expr : expr . tOBJECTS  (90)
	expr : expr . '+' expr  (91)
	expr : expr . '-' expr  (92)
	expr : expr . '*' expr  (93)
	expr : expr . '/' expr  (94)
	expr : expr . '%' expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . tEQUALS expr  (98)
	expr : expr . tAND expr  (100)
	expr : expr . tOR expr  (101)

	tAND  shift 163
	tOR  shift 164
	tEQUALS  shift 165
	tOBJECTS  shift 166
	'<'  shift 167
	'>'  shift 168
	'+'  shift 169
	'-'  shift 170
	'*'  shift 171
	'/'  shift 172
	'%'  shift 173
	')'  shift 232
	.  error


state 228
	lval : tCELL expr tAT '(' expr ')' .  (106)

	.  reduce 106


state 229
	sweeping : tSWEEPING lval tFROM expr tTO expr . tDO block  (77)
	sweeping : tSWEEPING lval tFROM expr tTO expr . tBY expr tDO block  (78)
	expr : expr . tOBJECTS  (90)
	expr : expr . '+' expr  (91)
	expr : expr . '-' expr  (92)
	expr : expr . '*' expr  (93)
	expr : expr . '/' expr  (94)
	expr : expr . '%' expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . tEQUALS expr  (98)
	expr : expr . tAND expr  (100)
	expr : expr . tOR expr  (101)

	tDO  shift 233
	tAND  shift 163
	tOR  shift 164
	tEQUALS  shift 165
	tOBJECTS  shift 166
	tBY  shift 234
	'<'  shift 167
	'>'  shift 168
	'+'  shift 169
	'-'  shift 170
	'*'  shift 171
	'/'  shift 172
	'%'  shift 173
	.  error


state 230
	ifs : expr tTHEN block tELSIF ifs .  (82)

	.  reduce 82


state 231
	ifs : expr tTHEN block tELSE block .  (81)

	.  reduce 81


state 232
	blockVar : type tIDENTIFIER '(' tINITIALLY expr ')' .  (37)

	.  reduce 37


state 233
	sweeping : tSWEEPING lval tFROM expr tTO expr tDO . block  (77)

	'{'  shift 80
	.  error

	block  goto 235


state 234
	sweeping : tSWEEPING lval tFROM expr tTO expr tBY . expr tDO block  (78)

	tINT  shift 84
	tDOUBLE  shift 85
	tIDENTIFIER  shift 102
	tSTRING  shift 86
	tUSE  shift 103
	tDO  shift 104
	tCELL  shift 107
	tINPUT  shift 108
	tNULL  shift 87
	'!'  shift 115
	'+'  shift 116
	'-'  shift 117
	'('  shift 118
	.  error

	expr  goto 236
	literal  goto 128
	funcCall  goto 129
	lval  goto 130
	string  goto 89
	integer  goto 90
	double  goto 91


state 235
	sweeping : tSWEEPING lval tFROM expr tTO expr tDO block .  (77)

	.  reduce 77


state 236
	sweeping : tSWEEPING lval tFROM expr tTO expr tBY expr . tDO block  (78)
	expr : expr . tOBJECTS  (90)
	expr : expr . '+' expr  (91)
	expr : expr . '-' expr  (92)
	expr : expr . '*' expr  (93)
	expr : expr . '/' expr  (94)
	expr : expr . '%' expr  (95)
	expr : expr . '<' expr  (96)
	expr : expr . '>' expr  (97)
	expr : expr . tEQUALS expr  (98)
	expr : expr . tAND expr  (100)
	expr : expr . tOR expr  (101)

	tDO  shift 237
	tAND  shift 163
	tOR  shift 164
	tEQUALS  shift 165
	tOBJECTS  shift 166
	'<'  shift 167
	'>'  shift 168
	'+'  shift 169
	'-'  shift 170
	'*'  shift 171
	'/'  shift 172
	'%'  shift 173
	.  error


state 237
	sweeping : tSWEEPING lval tFROM expr tTO expr tBY expr tDO . block  (78)

	'{'  shift 80
	.  error

	block  goto 238


state 238
	sweeping : tSWEEPING lval tFROM expr tTO expr tBY expr tDO block .  (78)

	.  reduce 78


60 terminals, 32 nonterminals
116 grammar rules, 239 states
